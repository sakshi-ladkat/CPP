int i,j,k,m,n,a[5][5],mul,pivot;
 int input(),gausselmination(),Display();
#include<stdio.h>
int main()
{
    input();
    Display();
    gausselmination();
    Display();
    return 0;
}
    
  int input()
    {
    // m=row,n=column,k=running index
    printf("Enter No of Rows and Columns");
    scanf("%d %d",&m,&n);

    if(m==n)
    {
        
        for(i=1;i<=m;i++)
        for(j=1;j<=n+1;j++)
        {
            if(j==n+1)
            {
                printf("Enter b1 of %d equation",i);
                scanf("%d",&a[i][j]);
            }
            else
        {
        printf("Enter coefficient of %d equation",i);
        scanf("%d",&a[i][j]);
        }
      }
    }
  }
int Display()
{
 printf("\n Matrix Represendation with Augmentation\n\n");
   for(i=1;i<=m;i++)
   {
        for(j=1;j<=n+1;j++)
        {
            if(j==n+1)
            {
                printf("\t|\t %d \t",a[i][j]);
            }
            else
            {
        printf("\t %d \t",a[i][j]);
            }
       
        }
   
        printf("\n");
   }
}
int gausselmination()
{
    for(i=1;i<=m;i++)
    {  if(a[i][i]!=0)
    {  pivot=a[i][i];
    for(j=1;j<=n+1;j++)
    { 
        a[i][j]=a[i][j]/pivot;
    }
   for(k=i+1;k<=m;k++)
   {
   mul=a[k][i];
   for(j=i;j<=n+1;j++)
   { 
   a[k][j]=a[k][j]-mul*a[i][j];
   }
   }
  }
  }
}
